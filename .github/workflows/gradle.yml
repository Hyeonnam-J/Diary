#
#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'zulu'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x ./gradlew
#        shell: bash
#
#      - name: Build with Gradle
#        run: ./gradlew build
#        shell: bash
#
#      - name: make a directory
#        run: mkdir -p deploy
#
#      - name: copy jar
#        run: cp ./build/libs/*.jar ./deploy
#
#      - name: copy appspec
#        run: cp ./appspec.yml ./deploy
#
#      - name: copy deploy.sh
#        run: cp ./deploy.sh ./deploy
#
#      - name: make zip file
#        run: zip -r ./deploy.zip ./deploy
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-northeast-2
#
#      - name: upload s3
#        run: aws s3 cp --region ap-northeast-2 ./deploy.zip s3://diary-api/deploy.zip
#
#      - name: deploy
#        run: |
#          aws deploy create-deployment \
#          --application-name diary-api-codedeploy \
#          --deployment-config-name CodeDeployDefault.OneAtATime \
#          --deployment-group-name diary-api-codedeploy-deploygroup \
#          --file-exists-behavior OVERWRITE \
#          --s3-location bucket=diary-api,bundleType=zip,key=deploy.zip \